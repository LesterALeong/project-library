/*
 *
 *       DO NOT EDIT THIS FILE
 *       For FCC testing purposes!
 *
 */

function objParser(str, init) {
  // finds objects, arrays, strings, and function arguments
  // between parens, because they may contain ','
  var openSym = ["[", "{", '"', "'", "("];
  var closeSym = ["]", "}", '"', "'", ")"];
  var type;
  var i;
  for (i = init || 0; i < str.length; i++) {
    type = openSym.indexOf(str[i]);
    if (type !== -1) break;
  }
  if (type === -1) return null;
  var open = openSym[type];
  var close = closeSym[type];
  var count = 1;
  for (i = i + 1; i < str.length; i++) {
    if (open === '"' || open === "'") {
      if (str[i] === close) count--;
      if (str[i] === "\\") i++;
    } else {
      if (str[i] === open) count++;
      if (str[i] === close) count--;
    }
    if (count === 0) break;
  }
  if (count !== 0) return null;
  var obj = str.slice(init || 0, i + 1);
  return {
    start: init || 0,
    end: i,
    obj: obj,
  };
}

function parseAssertions(assertions) {
  var reg = /(?:browser\s*\.\s*)?assert\s*\.\s*\w*\([\s\S]*?\)/;
  var arr = [];
  var result;
  while ((result = reg.exec(assertions))) {
    var obj = objParser(result[0], 0);
    arr.push(result[0].slice(0, obj.end + 1));
    assertions = assertions.slice(obj.end + 1);
  }
  return arr;
}

module.exports = parseAssertions;
